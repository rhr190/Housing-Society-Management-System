package hsms_project;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import hsms_project.HallRecords;
import static hsms_project.SocietyFees.isNumeric;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Dorktech
 */
public class SocietyHallBooking extends javax.swing.JFrame {

    /**
     * Creates new form HallBooking
     */
    public SocietyHallBooking() throws ParseException {
        initComponents();
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField4.setEditable(false);
        fill_up_combo_timeslot();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    //for inserting
    int smi;
    int rentfee;
    String occasion, timeslot;
    LocalDate eventDate;
    
    int search_SMI;
    
    LocalDate search_date;
   
    int DelSMI;
    LocalDate DelDate;
    String DelTimeSlot;
    
    int SMI_up;
    LocalDate prev_date, new_date;
    String prev_timeslot, new_timeslot;
    
    void showAllRecords()
    {
        
        ArrayList<HallRecords> allRecords = new ArrayList<>();
        HallRecords records;
        
         try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            String q = "Select HALL_BOOKING_SMI.Eventdate, SOCIETY_MEMBER.Name, SOCIETY_MEMBER.Phone1, HALL_BOOKING_SMI.Occasion, HALL_BOOKING_SMI.Timeslots FROM HALL_BOOKING_SMI LEFT JOIN SOCIETY_MEMBER ON HALL_BOOKING_SMI.SMI = SOCIETY_MEMBER.SMI";
            ResultSet rs = statement.executeQuery(q); //edit if necessary
            
            if(rs.next() == false)
            {
                System.out.println("No entry found");
            }
            else
            {
                do
                {
                    records = new HallRecords(rs.getDate("Eventdate"),rs.getString("Name"),rs.getString("Phone1"),rs.getString("Occasion"),rs.getString("Timeslots"));//edit column name if necessary
                    allRecords.add(records);
                }while(rs.next());
            }
            DefaultTableModel model = (DefaultTableModel)All_Records_Table.getModel();
            model.setRowCount(0);
            Object[] row = new Object[5];
            for(int i=0;i<allRecords.size();i++)
            {
                row[0] = allRecords.get(i).getDoe();
                row[1] = allRecords.get(i).getName();
                row[2] = allRecords.get(i).getCont_info();
                row[3] = allRecords.get(i).getOccasion();
                row[4] = allRecords.get(i).getTimeslot();
                model.addRow(row);
                
            }
            
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
 
    }
    
    
    
    void Insertion()
    {
        int num;
        smi = Integer.valueOf(SMI.getText());
        occasion = Occasion.getText();
        rentfee = Integer.valueOf(jTextField1.getText());
        jTextField1.setEditable(false);
        //check-if-smi
        if(check_SMI(SMI.getText())==false){
            JOptionPane.showMessageDialog(this, "Invalid SMI!");
            return;
        }
        String pattern  = "yyyy-MM-dd";      
        DateFormat formatter = new SimpleDateFormat(pattern);
        String date = formatter.format(jDateChooser1.getDate());
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            String q = "SELECT * from HALL_BOOKING_SMI where Eventdate='"+date+"' AND Timeslots='"+timeslot+"'";
            ResultSet rs = statement.executeQuery(q); //edit if necessary
            
            if(rs.next() == true)
            {
                JOptionPane.showMessageDialog(this,"Entry not possible, date/timeslot is booked");
                jTextField1.setEditable(true);
                jTextField1.setText("");
                jTextField1.setEditable(false);
                return;
            }
            
            else
            {
                q = "INSERT INTO HALL_BOOKING_SMI(SMI, Occasion, Timeslots, Eventdate, RentFee)"
                  + "VALUES("+smi+",'"+occasion+"', '"+timeslot+"','"+date+"' ,"+rentfee+")";
                statement.executeUpdate(q); //insert er query likhish, name ar contact info ana lagbe onno table theke
                JOptionPane.showMessageDialog(this,"Booking has been completed.\nPlease pay and collect the receipt");
                
            }
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            String q = "SELECT TOP 1 * from HALL_BOOKING_SMI ORDER BY Id DESC";
            ResultSet rs = statement.executeQuery(q); //edit if necessary
            if(rs.next())
            {
               jTextArea1.setText("Receipt of Society Hall Booking\n\n"
                                + "Booking Id:\t"+rs.getInt("Id")+"\n"
                                + "SMI:\t\t"+rs.getInt("SMI")+"\n"
                                + "Occasion:\t"+rs.getString("Occasion")+"\n"
                                + "Timeslot:\t"+rs.getString("Timeslots")+"\n"
                                + "Eventdate:\t"+rs.getString("Eventdate")+"\n"
                                + "RentFee:\t"+rs.getInt("RentFee")+"\n\n"
                                + "*This receipt has been generated\n"
                                + "automatically by the society office*");
            }
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }
    
    
    
    
    
    
    void searchRecordbySMI() // will show hall records booked by SMI
    {
        search_SMI = Integer.valueOf(Search_SMI.getText());
        
        ArrayList<HallRecords> SearchRecord_SMI = new ArrayList<>();
        HallRecords records_bySMI;
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("Select HALL_BOOKING_SMI.Eventdate, SOCIETY_MEMBER.Name, SOCIETY_MEMBER.Phone1, HALL_BOOKING_SMI.Occasion, HALL_BOOKING_SMI.Timeslots "
                    + "FROM HALL_BOOKING_SMI LEFT JOIN SOCIETY_MEMBER ON HALL_BOOKING_SMI.SMI = SOCIETY_MEMBER.SMI where HALL_BOOKING_SMI.SMI = "+search_SMI+""); //edit if necessary
            
            if(rs.next() == false)
            {
                JOptionPane.showMessageDialog(this,"No entry found");
            }
            else
            {
                do
                {
                    records_bySMI = new HallRecords(rs.getDate("Eventdate"),rs.getString("Name"),rs.getString("Phone1"),rs.getString("Occasion"),rs.getString("Timeslots")); //edit if column names are different
                    SearchRecord_SMI.add(records_bySMI);
                }while(rs.next());
            }
            DefaultTableModel model = (DefaultTableModel)Search_Record_Result.getModel();
            model.setRowCount(0);
            Object[] row = new Object[8];
            for(int i=0;i<SearchRecord_SMI.size();i++)
            {
                row[0] = SearchRecord_SMI.get(i).getDoe();
                row[1] = SearchRecord_SMI.get(i).getName();
                row[2] = SearchRecord_SMI.get(i).getCont_info();
                row[3] = SearchRecord_SMI.get(i).getOccasion();
                row[4] = SearchRecord_SMI.get(i).getTimeslot();
                model.addRow(row);
            }
            
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    
    void searchRecordbyDate() // will show hall records booked by SMI in a perticular date
    {
        //java.util.Date date = Search_Date.getDate();
        //search_date = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        //java.sql.Date sqlSearchDate = java.sql.Date.valueOf(search_date);
        String pattern  = "yyyy-MM-dd";      
        DateFormat formatter = new SimpleDateFormat(pattern);
        String dop = formatter.format(Search_Date.getDate());
        
        ArrayList<HallRecords> SearchRecord_Date = new ArrayList<>();
        HallRecords records_byDate;
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("Select HALL_BOOKING_SMI.Eventdate, SOCIETY_MEMBER.Name, SOCIETY_MEMBER.Phone1, HALL_BOOKING_SMI.Occasion, HALL_BOOKING_SMI.Timeslots "
                    + "FROM HALL_BOOKING_SMI LEFT JOIN SOCIETY_MEMBER ON HALL_BOOKING_SMI.SMI = SOCIETY_MEMBER.SMI  "
                    + "where Eventdate = '"+dop+"'"); //edit if necessary
            
            if(rs.next() == false)
            {
                JOptionPane.showMessageDialog(this,"No entry found");
            }
            else
            {
                do
                {
                    records_byDate = new HallRecords(rs.getDate("Eventdate"),rs.getString("Name"),rs.getString("Phone1"),rs.getString("Occasion"),rs.getString("Timeslots")); //edit if column names are diff
                    SearchRecord_Date.add(records_byDate);
                }while(rs.next());
            }
            DefaultTableModel model = (DefaultTableModel)Search_Record_Result.getModel();
            model.setRowCount(0);
            Object[] row = new Object[8];
            for(int i=0;i<SearchRecord_Date.size();i++)
            {
                //row[0] = searchRecord_Date.get(i).getDoe();
                row[0] = SearchRecord_Date.get(i).getDoe();
                row[1] = SearchRecord_Date.get(i).getName();
                row[2] = SearchRecord_Date.get(i).getCont_info();
                row[3] = SearchRecord_Date.get(i).getOccasion();
                row[4] = SearchRecord_Date.get(i).getTimeslot();
                model.addRow(row);

            }
            
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    
    
    void updateRecord()
    {
        
        //SMI_up=Integer.valueOf(SMI_Update.getText());
        
        // date= PreviousDate.getDate();
        //prev_date = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        //java.sql.Date sqlPrevDate = java.sql.Date.valueOf(prev_date);
        
        String booked_id = jTextField3.getText();
        java.util.Date date = UpdatedDate.getDate();
        new_date = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        java.sql.Date sqlNewDate = java.sql.Date.valueOf(new_date);
        
        //prev_timeslot = (String)PreviousTimeSlot.getSelectedItem();
        new_timeslot = (String)UpdatedTimeSlot.getSelectedItem();
        
        String new_rent = jTextField2.getText();
        int new_rent_int = Integer.valueOf(new_rent);
        int old_rent_int = 0;
        int result_amount = 0;
        String old_rent="";
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * from HALL_BOOKING_SMI where Id = "+booked_id); //edit if necessary
            
            if(rs.next() == false)
            {
                JOptionPane.showMessageDialog(this,"No related entry found");
                return;
            }
            rs = statement.executeQuery("SELECT * from HALL_BOOKING_SMI where Eventdate = '"+sqlNewDate+"' AND Timeslots = '"+new_timeslot+"'"); //edit if neessary
            if(rs.next()== true)
            {
                JOptionPane.showMessageDialog(this,"New date/timeslot not available");
                return;
            }
            else
            {
                statement.executeUpdate("UPDATE HALL_BOOKING_SMI SET Eventdate = '"+sqlNewDate+"', Timeslots = '"+new_timeslot+"' WHERE Id = "+booked_id); //edit if column names are different
                JOptionPane.showMessageDialog(this,"Record updated successfully");
                jTextArea2.setText("Receipt of Society Hall Booking\n"
                                + "UPDATED\n\n"
                                + "Booking Id:\t"+booked_id+"\n"
                                + "New Timeslot:\t"+new_timeslot+"\n"
                                + "Eventdate:\t"+sqlNewDate+"\n"
                                + "RentFee:\t"+new_rent+"\n\n"
                                + "PLEASE BRING BOTH UPDATED AND\n"
                                + "THE FIRST GENERATED RECEIPT\n"
                                + "AT TIME OF THE EVENT\n\n"        
                                + "*This receipt has been generated\n"
                                + "automatically by the society office*");
            
                calculate_extraRent();
            }  
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }
    void deleteRecord()
    {
        int num;
        String book_id = jTextField3.getText();
        //DelSMI = Integer.valueOf(SMI_Delete.getText());
        
        //java.util.Date date = Date_Delete.getDate();
        //DelDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        //java.sql.Date sqlDateDel = java.sql.Date.valueOf(DelDate);
        
        //DelTimeSlot = (String)Time_Slot_Delete.getSelectedItem();
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * from HALL_BOOKING_SMI where Id = "+book_id); //edit if necessary
            
            if(rs.next() == false)
            {
                System.out.println("No entry found");
            }
            else
            {
                 rs = statement.executeQuery("SELECT RentFee from HALL_BOOKING_SMI where Id = "+book_id);
                 if(rs.next()){
                     
                     jTextField4.setText("Society Office to return back "+rs.getString("RentFee")+" Tk.");
                 }
                 num = statement.executeUpdate("DELETE from HALL_BOOKING_SMI where Id = "+book_id); //edit if necessary
                 if(num==1)
                 {
                     //System.out.println("Deletion complete");
                     JOptionPane.showMessageDialog(this, "Booking has been removed");
                     
                 }
            }
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Insert_Records_Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Button_All_Records = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        All_Records_Table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        SMI_Label = new javax.swing.JLabel();
        SMI = new javax.swing.JTextField();
        Occasion_Label = new javax.swing.JLabel();
        Occasion = new javax.swing.JTextField();
        EventDate_Label = new javax.swing.JLabel();
        Time_Slots = new javax.swing.JComboBox<>();
        TimeSlot_Label = new javax.swing.JLabel();
        RentFee_Label = new javax.swing.JLabel();
        Submit_button = new javax.swing.JButton();
        Clear_Button = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        printSocFeeBtn = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Search_SMI = new javax.swing.JTextField();
        Search_Date = new com.toedter.calendar.JDateChooser();
        SMISearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Search_Record_Result = new javax.swing.JTable();
        DateSearchButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        UpdatedDate = new com.toedter.calendar.JDateChooser();
        UpdatedTimeSlot = new javax.swing.JComboBox<>();
        UpdateButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        printSocFeeBtn1 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Society Hall Booking");

        Insert_Records_Tab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        Button_All_Records.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Button_All_Records.setText("Show All Records");
        Button_All_Records.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_All_RecordsActionPerformed(evt);
            }
        });

        All_Records_Table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        All_Records_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Date", "Name", "Contact Info", "Occasion", "Time Slot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(All_Records_Table);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Main Menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(698, 698, 698)
                        .addComponent(Button_All_Records)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 597, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_All_Records)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Insert_Records_Tab.addTab("Booked Records", jPanel1);

        SMI_Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SMI_Label.setText("SMI");

        SMI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMIActionPerformed(evt);
            }
        });

        Occasion_Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Occasion_Label.setText("Occasion");

        Occasion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Occasion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OccasionActionPerformed(evt);
            }
        });

        EventDate_Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EventDate_Label.setText("Event Date");

        Time_Slots.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Time_Slots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Time_SlotsActionPerformed(evt);
            }
        });

        TimeSlot_Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TimeSlot_Label.setText("Time Slot");

        RentFee_Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        RentFee_Label.setText("Rent Fee");

        Submit_button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Submit_button.setText("Submit");
        Submit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Submit_buttonActionPerformed(evt);
            }
        });

        Clear_Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Clear_Button.setText("Clear");
        Clear_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_ButtonActionPerformed(evt);
            }
        });

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jDateChooser1.setPreferredSize(new java.awt.Dimension(100, 33));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Generate Rent");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("Main Menu");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        printSocFeeBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        printSocFeeBtn.setText("Print");
        printSocFeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printSocFeeBtnActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton15.setText("Clear");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(519, 519, 519)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(TimeSlot_Label)
                                .addGap(18, 18, 18)
                                .addComponent(Time_Slots, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(EventDate_Label)
                                    .addComponent(RentFee_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Occasion_Label)
                                    .addComponent(SMI_Label))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Occasion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jTextField1)
                                            .addGap(89, 89, 89))
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(SMI, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(125, 125, 125)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(351, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Submit_button)
                        .addGap(59, 59, 59)
                        .addComponent(Clear_Button)
                        .addGap(301, 301, 301)
                        .addComponent(printSocFeeBtn)
                        .addGap(43, 43, 43)
                        .addComponent(jButton15)
                        .addGap(441, 441, 441))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton6)
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SMI_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 27, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Occasion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Occasion_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventDate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Time_Slots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimeSlot_Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RentFee_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(171, 171, 171))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printSocFeeBtn)
                    .addComponent(jButton15)
                    .addComponent(Submit_button)
                    .addComponent(Clear_Button))
                .addGap(185, 185, 185))
        );

        Insert_Records_Tab.addTab("Insert Record", jPanel2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Enter SMI");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Choose Date");

        Search_SMI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Search_SMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_SMIActionPerformed(evt);
            }
        });

        Search_Date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        SMISearchButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SMISearchButton.setText("Search");
        SMISearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMISearchButtonActionPerformed(evt);
            }
        });

        Search_Record_Result.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Search_Record_Result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Name", "Contact Info", "Occassion", "Time slot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Search_Record_Result);

        DateSearchButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DateSearchButton.setText("Search");
        DateSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateSearchButtonActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("Main Menu");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(562, 562, 562)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateSearchButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search_SMI, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SMISearchButton)))
                .addGap(673, 673, 673))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel7)
                    .addComponent(Search_SMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SMISearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DateSearchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Search_Date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addContainerGap())
        );

        Insert_Records_Tab.addTab("Search Record", jPanel3);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Enter New Time Slot");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Enter New Date");

        UpdatedDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        UpdatedTimeSlot.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        UpdateButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Generate Rent");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Main Menu");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Rent");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane5.setViewportView(jTextArea2);

        printSocFeeBtn1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        printSocFeeBtn1.setText("Print");
        printSocFeeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printSocFeeBtn1ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton16.setText("Clear");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Booking Id");

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Remarks");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(322, 322, 322)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(UpdatedDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(UpdatedTimeSlot, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(DeleteButton)))
                                .addGap(120, 120, 120))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addGap(348, 348, 348))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(349, 349, 349))))))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 400, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(502, 502, 502)
                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(299, 299, 299)
                .addComponent(printSocFeeBtn1)
                .addGap(57, 57, 57)
                .addComponent(jButton16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton4)
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteButton))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UpdatedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(UpdatedTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(printSocFeeBtn1)
                        .addComponent(jButton16)))
                .addContainerGap(233, Short.MAX_VALUE))
        );

        Insert_Records_Tab.addTab("Update Records", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Insert_Records_Tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Insert_Records_Tab, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        updateRecord();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DateSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateSearchButtonActionPerformed
        // TODO add your handling code here:
        searchRecordbyDate();
    }//GEN-LAST:event_DateSearchButtonActionPerformed

    private void SMISearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMISearchButtonActionPerformed
        // TODO add your handling code here:
        searchRecordbySMI();
    }//GEN-LAST:event_SMISearchButtonActionPerformed

    private void Search_SMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_SMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_SMIActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        timeslot = Time_Slots.getSelectedItem().toString();
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("select Rent from HALL_TIME_RENT_SMI where Timeslots= '"+timeslot+"'"); //edit if necessary
            //ResultSet rs = statement.executeQuery("DELETE from HALL_BOOKING_SMI where Id = "+book_id); //edit if necessary
            if(rs.next())
            {
                jTextField1.setText(rs.getString("Rent"));
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Submit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Submit_buttonActionPerformed
        // TODO add your handling code here:
        Insertion();
        
    }//GEN-LAST:event_Submit_buttonActionPerformed

    private void Time_SlotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Time_SlotsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Time_SlotsActionPerformed

    private void OccasionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OccasionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OccasionActionPerformed

    private void SMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SMIActionPerformed

    private void Button_All_RecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_All_RecordsActionPerformed
        // TODO add your handling code here:
        showAllRecords();
    }//GEN-LAST:event_Button_All_RecordsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        timeslot = UpdatedTimeSlot.getSelectedItem().toString();
        //timeslot = Time_Slots.getSelectedItem().toString();
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("select Rent from HALL_TIME_RENT_SMI where Timeslots= '"+timeslot+"'"); //edit if necessary
            //ResultSet rs = statement.executeQuery("DELETE from HALL_BOOKING_SMI where Id = "+book_id); //edit if necessary
            if(rs.next())
            {
                jTextField2.setText(rs.getString("Rent"));
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        goto_main_menu();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        goto_main_menu();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        goto_main_menu();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        goto_main_menu();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void printSocFeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printSocFeeBtnActionPerformed
        try {
            // TODO add your handling code here:
            boolean complete = jTextArea1.print();
            if(complete){
                JOptionPane.showMessageDialog(null, "Done Printing", "Information", JOptionPane.ERROR_MESSAGE);
            }
        } catch (PrinterException ex) {
            Logger.getLogger(SocietyFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printSocFeeBtnActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton15ActionPerformed

    private void printSocFeeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printSocFeeBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printSocFeeBtn1ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void Clear_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_ButtonActionPerformed
        // TODO add your handling code here:
        SMI.setText("");
        Occasion.setText("");
        jDateChooser1.setDate(null);
        jTextField1.setText("");
    }//GEN-LAST:event_Clear_ButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        deleteRecord();
    }//GEN-LAST:event_DeleteButtonActionPerformed
    public void print_receipt(){
        
    }
    public void goto_main_menu(){
        OpeningDisplay od = new OpeningDisplay();
        od.setVisible(true);
        this.setVisible(false);
    }
    public static boolean check_SMI(String smiString){
        int count=0;
        
        /*Checking if SMI is valid or not*/
        try {
            Connection connection;
            connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                   .executeQuery("SELECT COUNT(*) as Count FROM SOCIETY_MEMBER WHERE SMI = "+smiString+" and State=1");           
            if (resultSet.next()) {
                if(resultSet.getString("Count").equals("0")){
                    count++;
                }             
            }
            
                        
        } catch (Exception e) {
            e.printStackTrace();
        }
        if(count == 0){
            return true;
        }else{
            return false;
        }
    }
    public void calculate_extraRent(){
        String booked_id = jTextField3.getText();
        String new_rent = jTextField2.getText();
        int new_rent_int = Integer.valueOf(new_rent);
        int old_rent_int = 0;
        int result_amount = 0;
        //String old_rent="";
        try{
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456"); //edit if necessary
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * from HALL_BOOKING_SMI where Id = "+booked_id); //edit if necessary
            
            if(rs.next() == false)
            {
                JOptionPane.showMessageDialog(this,"No related entry found");
                return;
            }else{
                old_rent_int = rs.getInt("RentFee");
                result_amount = new_rent_int - old_rent_int;
                if(result_amount>0){
                    jTextField4.setText("Society member to pay extra "+result_amount+"Tk.");
                }else if(result_amount<0){
                    jTextField4.setText("Society Office to return back "+Math.abs(result_amount)+"Tk.");
                }else{
                    jTextField4.setText("Previous rent charge will carry on");
                }   
            }  
            
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    public void fill_up_combo_timeslot(){
        try{
            Connection connection;
            connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=HSMS_Project;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            
            String query;
            query = "select * from HALL_TIME_RENT_SMI";
            
            ResultSet resultset = statement.executeQuery(query);
            //DonationPurposeClass purposeClass;
            while(resultset.next()){
                Time_Slots.addItem(resultset.getString("Timeslots"));
                UpdatedTimeSlot.addItem(resultset.getString("Timeslots"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SocietyHallBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SocietyHallBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SocietyHallBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SocietyHallBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SocietyHallBooking().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(SocietyHallBooking.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable All_Records_Table;
    private javax.swing.JButton Button_All_Records;
    private javax.swing.JButton Clear_Button;
    private javax.swing.JButton DateSearchButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel EventDate_Label;
    private javax.swing.JTabbedPane Insert_Records_Tab;
    private javax.swing.JTextField Occasion;
    private javax.swing.JLabel Occasion_Label;
    private javax.swing.JLabel RentFee_Label;
    private javax.swing.JTextField SMI;
    private javax.swing.JButton SMISearchButton;
    private javax.swing.JLabel SMI_Label;
    private com.toedter.calendar.JDateChooser Search_Date;
    private javax.swing.JTable Search_Record_Result;
    private javax.swing.JTextField Search_SMI;
    private javax.swing.JButton Submit_button;
    private javax.swing.JLabel TimeSlot_Label;
    private javax.swing.JComboBox<String> Time_Slots;
    private javax.swing.JButton UpdateButton;
    private com.toedter.calendar.JDateChooser UpdatedDate;
    private javax.swing.JComboBox<String> UpdatedTimeSlot;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton printSocFeeBtn;
    private javax.swing.JButton printSocFeeBtn1;
    // End of variables declaration//GEN-END:variables
}
